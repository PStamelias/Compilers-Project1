Part1:
Μας δίνεται η παρακάτω γραμματική:

exp -> num | exp op exp | ( exp )
op -> + | -| * | /
num -> digit | digit num
digit -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

Τη μετασχηματίζουμε σε  μορφή LL(1) και έχουμε:

calc -> expr
expr -> term expr2
expr2 -> + term expr2
      | - term expr2
      | e
term -> factor term2
term2 -> * factor term2
      |  / factor term2
      | e
factor -> number | ( expr )
number -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9


(0,1,2,3,4,5,6,7,8,9 are terminal symbols)

For sets of first,follow and first+
we wil set number={'0','1','2','3','4','5','6','7','8','9'}


FIRST SETS

FIRST(calc)={number, '(' }
FIRST(expr)={number, '(' }
FIRST(expr2)={'+','-', e }
FIRST(term)={number, '(' }
FIRST(term2)={'*','/', e }
FIRST(factor)={number, '(' }
FIRST(number)={'0','1','2','3','4','5','6','7','8','9'}
 

FOLLOW SETS

FOLLOW(calc)={ $ }
FOLLOW(expr)={ ')' , $ }
FOLLOW(expr2)={ ')' , $ }
FOLLOW(term)={ '+' , '-' , ')' , $ }
FOLLOW(term2)={ '+', '-' , ')', $ )
FOLLOW(factor)={ '*' , '/' , '+' , '-' ,' )' , $ }
FOLLOW(number)={ '*' , '/' , '+' , '-' , ')' , $ }

FIRST+ SETS

FIRST+(calc)={number , '(' }
FIRST+(expr)={number , '(' }
FIRST+(expr2)={ '+' , '-' , ')' , $ }
FIRST+(term)={number , '(' }
FIRST+(term2)={ '*' , '/' , '+' , '-' , ')' , $ }
FIRST+(factor)={number , '(' }


LOOKHEAD TABLE



-----------------------------------------------------------------------------------------------------------------------------------
	  |      '('     |    ')'  |      '+'       |      '-'       |       '*'       |       '/'       |    number    |    $    |
-----------------------------------------------------------------------------------------------------------------------------------
	  |              |         |                |                |                 |                 |              |         |
calc	  |     expr     |  error  |     error      |     error      |      error      |      error      |     expr     |  error  |
	  |              |         |                |                |                 |                 |              |         |
-----------------------------------------------------------------------------------------------------------------------------------
	  |              |         |                |                |                 |                 |              |         |
expr	  |  term expr2  |  error  |     error      |     error      |      error      |      error      |  term expr2  |  error  |
	  |              |         |                |                |                 |                 |              |         |
-----------------------------------------------------------------------------------------------------------------------------------
	  |              |         |                |                |                 |                 |              |         |
expr2	  |    error     |    e    | '+' term expr2 | '-' term expr2 |      error      |      error      |    error     |    e    |
	  |              |         |                |                |                 |                 |              |         |
-----------------------------------------------------------------------------------------------------------------------------------
	  |              |         |                |                |                 |                 |              |         |
term	  | factor term2 |  error  |     error      |     error      |      error      |      error      | factor term2 |  error  |
	  |              |         |                |                |                 |                 |              |         |
-----------------------------------------------------------------------------------------------------------------------------------
	  |              |         |                |                |                 |                 |              |         |
term2	  |    error     |    e    |       e        |       e        | '*' factor term | '/' factor term |    error     |    e    |
	  |              |         |                |                |                 |                 |              |         |
-----------------------------------------------------------------------------------------------------------------------------------
	  |              |         |                |                |                 |                 |              |         |
factor	  | '(' expr ')' |  error  |     error      |     error      |      error      |      error      |    number    |  error  |
	  |              |         |                |                |                 |                 |              |         |
-----------------------------------------------------------------------------------------------------------------------------------

Για να τρέξουμε τον Calculator αρκούν οι ακόλουθες εντολές
$make 
$java Calculator

Part2:
Για την υλοποίηση των συναρτήσεων reverse και prefix χρησιμοποίησα τις (new StringBUffer().reverse()).toString()   , startsWith() αντίστοιχα
Όσον αφορά για το confilct στο function declaration η λογική της γραμματικής που όρισα είναι ότι όταν δεν παρσάρει πλέον συναρτήσεις θα παρσάρει μετά μόνο κλήσεις συναρτήσεων.Επίσης για να αντιμετωπίσω το conflict όρισα στη γραμματικες FunB,FunC  όλες τις δυνατές περιπτώσεις που θα μπορούσα να αντιμετωπίσω.Επίσης για τη αναγκαιότητα της υλοποίησης του reverse όρισα δύο γραμματικές cf τις DE,DE2.Τέλος για την υλοποίηση της εκτύπωσης χρησιμοποίσα τη μεταβλητή RESULT  η οποία αποθήκευε κάθε φορά τη τιμή  που έπρεπε να εκτυπωθεί! 

 

